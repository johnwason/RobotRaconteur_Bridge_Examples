(function(){"use strict";Bridge.define("iRobotCreateBridgeClient.App",{statics:{webcam_host:null,webcam:null,webcam_pipe:null,webcam_pipe_ep:null,canvas:null,ctx:null,imageData:null,imageBytes:null,create:null,config:{init:function(){Bridge.ready(this.main)}},main:function(){document.getElementById("ConnectWebcam").onclick=$_.iRobotCreateBridgeClient.App.f1;document.getElementById("DisconnectWebcam").onclick=$_.iRobotCreateBridgeClient.App.f2;document.getElementById("ConnectCreate").onclick=$_.iRobotCreateBridgeClient.App.f3;document.getElementById("DisconnectCreate").onclick=$_.iRobotCreateBridgeClient.App.f4;document.getElementById("stop").onclick=$_.iRobotCreateBridgeClient.App.f5;document.getElementById("reverse").onclick=$_.iRobotCreateBridgeClient.App.f6;document.getElementById("forward").onclick=$_.iRobotCreateBridgeClient.App.f7;document.getElementById("spinleft").onclick=$_.iRobotCreateBridgeClient.App.f8;document.getElementById("spinright").onclick=$_.iRobotCreateBridgeClient.App.f9;iRobotCreateBridgeClient.App.updateGamepadCheckbox();window.addEventListener("gamepadconnected",$_.iRobotCreateBridgeClient.App.f10);window.addEventListener("gamepaddisconnected",$_.iRobotCreateBridgeClient.App.f10);window.setInterval(iRobotCreateBridgeClient.App.updateGamepad,100)},connectWebcam:function(){var $step=0,$task1,$taskResult1,$task2,$taskResult2,$task3,$taskResult3,webcam_url,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=Bridge.Array.min([1,2,3,4,5,6],$step);switch($step){case 1:webcam_url=document.getElementById("WebcamUrl").value;$task1=RobotRaconteur.RobotRaconteurNode.gets().connectService(webcam_url);$step=2;$task1.continueWith($asyncBody,!0);return;case 2:$taskResult1=$task1.getAwaitedResult();iRobotCreateBridgeClient.App.webcam_host=$taskResult1;$task2=iRobotCreateBridgeClient.App.webcam_host.get_Webcams(0);$step=3;$task2.continueWith($asyncBody,!0);return;case 3:$taskResult2=$task2.getAwaitedResult();iRobotCreateBridgeClient.App.webcam=$taskResult2;iRobotCreateBridgeClient.App.webcam_pipe=iRobotCreateBridgeClient.App.webcam.FrameStream;$task3=iRobotCreateBridgeClient.App.webcam_pipe.connect(-1);$step=4;$task3.continueWith($asyncBody,!0);return;case 4:$taskResult3=$task3.getAwaitedResult();iRobotCreateBridgeClient.App.webcam_pipe_ep=$taskResult3;iRobotCreateBridgeClient.App.webcam_pipe_ep.addPacketReceivedEvent(iRobotCreateBridgeClient.App.webcamPacketReceived);document.getElementById("WebcamLogin").style.display="none";document.getElementById("WebcamDisplay").style.display="block";document.getElementById("StartStreaming").onclick=$_.iRobotCreateBridgeClient.App.f11;document.getElementById("StopStreaming").onclick=$_.iRobotCreateBridgeClient.App.f12;$step=6;continue;case 5:window.alert("Error: Could not connect to Webcam");$step=6;continue;case 6:return;default:return}}}catch($async_e1){if($async_e=Bridge.Exception.create($async_e1),$step>=1&&$step<=4){$step=5;$asyncBody();return}throw $async_e;}},arguments);$asyncBody()},disconnectWebcam:function(){var $step=0,$task1,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=Bridge.Array.min([0,1,2,3],$step);switch($step){case 0:if(document.getElementById("WebcamLogin").style.display="block",document.getElementById("WebcamDisplay").style.display="none",iRobotCreateBridgeClient.App.webcam_host!=null){$step=1;continue}$step=3;continue;case 1:$task1=RobotRaconteur.RobotRaconteurNode.gets().disconnectService(iRobotCreateBridgeClient.App.webcam_host);$step=2;$task1.continueWith($asyncBody,!0);return;case 2:$task1.getAwaitedResult();iRobotCreateBridgeClient.App.webcam_host=null;iRobotCreateBridgeClient.App.webcam=null;iRobotCreateBridgeClient.App.webcam_pipe=null;iRobotCreateBridgeClient.App.webcam_pipe_ep=null;$step=3;continue;case 3:return;default:return}}},arguments);$asyncBody()},webcamPacketReceived:function(e){for(var f=null;e.getAvailable()>0;)f=e.receivePacket();f!=null&&iRobotCreateBridgeClient.App.showFrame(f)},showFrame:function(image){var y,x,index1,index2;for(iRobotCreateBridgeClient.App.canvas==null&&(iRobotCreateBridgeClient.App.canvas=document.getElementById("image"),iRobotCreateBridgeClient.App.ctx=iRobotCreateBridgeClient.App.canvas.getContext("2d")),iRobotCreateBridgeClient.App.imageData==null&&(iRobotCreateBridgeClient.App.imageData=iRobotCreateBridgeClient.App.ctx.createImageData(image.width,image.height),iRobotCreateBridgeClient.App.imageBytes=iRobotCreateBridgeClient.App.imageData.data),Bridge.referenceEquals(iRobotCreateBridgeClient.App.imageData.width,image.width)&&Bridge.referenceEquals(iRobotCreateBridgeClient.App.imageData.height,image.height)||(iRobotCreateBridgeClient.App.imageData=iRobotCreateBridgeClient.App.ctx.createImageData(image.width,image.height),iRobotCreateBridgeClient.App.imageBytes=iRobotCreateBridgeClient.App.imageData.data),y=0;y<image.height;y=y+1|0)for(x=0;x<image.width;x=x+1|0)index1=(x+image.width*y)*4|0,index2=(x*3|0)+image.step*y,iRobotCreateBridgeClient.App.imageBytes[index1]=image.data[index2+2|0],iRobotCreateBridgeClient.App.imageBytes[index1+1|0]=image.data[index2+1|0],iRobotCreateBridgeClient.App.imageBytes[index1+2|0]=image.data[index2],iRobotCreateBridgeClient.App.imageBytes[index1+3|0]=255;iRobotCreateBridgeClient.App.ctx.putImageData(iRobotCreateBridgeClient.App.imageData,0,0)},connectCreate:function(){var $step=0,$task1,$taskResult1,create_url,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=Bridge.Array.min([1,2,3,4],$step);switch($step){case 1:create_url=document.getElementById("CreateUrl").value;$task1=RobotRaconteur.RobotRaconteurNode.gets().connectService(create_url);$step=2;$task1.continueWith($asyncBody,!0);return;case 2:$taskResult1=$task1.getAwaitedResult();iRobotCreateBridgeClient.App.create=$taskResult1;document.getElementById("CreateLogin").style.display="none";document.getElementById("CreateDisplay").style.display="block";iRobotCreateBridgeClient.App.updateGamepadCheckbox();$step=4;continue;case 3:window.alert("Error: Could not connect to Create");$step=4;continue;case 4:return;default:return}}}catch($async_e1){if($async_e=Bridge.Exception.create($async_e1),$step>=1&&$step<=2){$step=3;$asyncBody();return}throw $async_e;}},arguments);$asyncBody()},disconnectCreate:function(){var $step=0,$task1,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=Bridge.Array.min([0,1,2,3],$step);switch($step){case 0:if(iRobotCreateBridgeClient.App.create!=null){$step=1;continue}$step=3;continue;case 1:$task1=RobotRaconteur.RobotRaconteurNode.gets().disconnectService(iRobotCreateBridgeClient.App.create);$step=2;$task1.continueWith($asyncBody,!0);return;case 2:$task1.getAwaitedResult();iRobotCreateBridgeClient.App.create=null;document.getElementById("CreateLogin").style.display="block";document.getElementById("CreateDisplay").style.display="none";$step=3;continue;case 3:return;default:return}}},arguments);$asyncBody()},drive:function(velocity,radius){var $step=0,$task1,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=Bridge.Array.min([0,1],$step);switch($step){case 0:$task1=iRobotCreateBridgeClient.App.create.Drive(velocity,radius);$step=1;$task1.continueWith($asyncBody,!0);return;case 1:$task1.getAwaitedResult();return;default:return}}},arguments);$asyncBody()},updateGamepadCheckbox:function(){if(iRobotCreateBridgeClient.App.create!=null){var checkbox=document.getElementById("enablegamepad"),w=window.navigator,gp=w.getGamepads()[0];Bridge.referenceEquals(gp,undefined)?(checkbox.disabled=!0,checkbox.checked=!1):checkbox.disabled=!1}},updateGamepad:function(){var checkbox,speed,radius;if(iRobotCreateBridgeClient.App.create!=null&&(checkbox=document.getElementById("enablegamepad"),checkbox.checked)){var pos=document.getElementById("pos"),w1=window.navigator,gp1=w1.getGamepads()[0],x=Bridge.cast(gp1.axes[0],Bridge.Double),y=-Bridge.cast(gp1.axes[1],Bridge.Double);x=Math.abs(x)<.2?0:(Math.abs(x)-.2)/.8*Bridge.Int.sign(x);y=Math.abs(y)<.2?0:(Math.abs(y)-.2)/.8*Bridge.Int.sign(y);speed=0;radius=32767;y===0?(x<0&&x!==0&&(radius=1),x>0&&x!==0&&(radius=-1),x!==0&&(speed=Bridge.Int.clip16(Math.abs(x)*200))):(speed=Bridge.Int.clip16(y*200),x!==0&&(radius=Bridge.Int.clip16(-(1-Math.abs(x))*5e3*Bridge.Int.sign(x)),radius===0&&(radius=Bridge.Int.sxs((-Bridge.Int.sign(x)|0)&65535))));iRobotCreateBridgeClient.App.drive(speed,radius)}}}});var $_={};Bridge.ns("iRobotCreateBridgeClient.App",$_);Bridge.apply($_.iRobotCreateBridgeClient.App,{f1:function(){iRobotCreateBridgeClient.App.connectWebcam()},f2:function(){iRobotCreateBridgeClient.App.disconnectWebcam()},f3:function(){iRobotCreateBridgeClient.App.connectCreate()},f4:function(){iRobotCreateBridgeClient.App.disconnectCreate()},f5:function(){iRobotCreateBridgeClient.App.drive(0,32767)},f6:function(){iRobotCreateBridgeClient.App.drive(-200,32767)},f7:function(){iRobotCreateBridgeClient.App.drive(200,32767)},f8:function(){iRobotCreateBridgeClient.App.drive(200,1)},f9:function(){iRobotCreateBridgeClient.App.drive(200,-1)},f10:function(){iRobotCreateBridgeClient.App.updateGamepadCheckbox()},f11:function(){iRobotCreateBridgeClient.App.webcam.StartStreaming()},f12:function(){iRobotCreateBridgeClient.App.webcam.StopStreaming()}});Bridge.init()})(this);